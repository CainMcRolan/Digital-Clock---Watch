(()=>{"use strict";var t,e={716:(t,e,n)=>{n.d(e,{A:()=>d});var r=n(354),i=n.n(r),o=n(314),A=n.n(o),s=n(417),a=n.n(s),c=new URL(n(310),n.b),l=A()(i()),h=a()(c);l.push([t.id,`@font-face{font-family:"Anton";src:url(${h})}*{margin:0;padding:0;box-sizing:border-box}html,body{width:100%;height:100vh;background-color:#0f0f0f}nav{width:100%;height:5vh;display:flex;justify-content:center;align-items:center}nav button{background-color:#1f1f1f;border:none;width:2rem;height:2rem;color:#fff;border-radius:1rem;cursor:pointer;transition:transform .5s ease;margin:0px .5rem}nav button:hover{filter:brightness(90%)}nav .fullscreen{transform:rotate(90deg)}article.main-container{width:100%;height:95vh;display:flex;justify-content:center}article.main-container>div{width:80%;height:90%;display:flex;justify-content:center;align-items:center;flex-direction:column;color:#969696;font-family:"Anton";font-weight:100}article.main-container>div>h1.watch{font-size:20rem;display:flex;justify-content:center;transition:all .5s ease}article.main-container>div>h1.clock{font-size:21rem;display:none;justify-content:center;transition:all .5s ease}article.main-container>div>div{width:20%;height:5%;display:flex;justify-content:center;align-items:center}article.main-container>div>div>button{margin:0px 1rem;background-color:#191919;border:none;border-radius:.2rem;color:#969696;font-family:sans-serif;font-weight:bold;width:5rem;height:2.5rem;cursor:pointer;transition:all .5s ease}article.main-container>div>div>button:hover{filter:brightness(90%)}`,"",{version:3,sources:["webpack://./src/assets/styles/style.scss"],names:[],mappings:"AAAA,WACE,mBAAA,CACA,2CAAA,CAGF,EACE,QAAA,CACA,SAAA,CACA,qBAAA,CAGF,UACE,UAAA,CACA,YAAA,CACA,wBAAA,CAGF,IACE,UAAA,CACA,UAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,WACE,wBAAA,CACA,WAAA,CACA,UAAA,CACA,WAAA,CACA,UAAA,CACA,kBAAA,CACA,cAAA,CACA,6BAAA,CACA,gBAAA,CAGF,iBACE,sBAAA,CAGF,gBACE,uBAAA,CAIJ,uBACE,UAAA,CACA,WAAA,CACA,YAAA,CACA,sBAAA,CAEA,2BACE,SAAA,CACA,UAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,qBAAA,CACA,aAAA,CACA,mBAAA,CACA,eAAA,CAEA,oCACE,eAAA,CACA,YAAA,CACA,sBAAA,CACA,uBAAA,CAGF,oCACE,eAAA,CACA,YAAA,CACA,sBAAA,CACA,uBAAA,CAGF,+BACE,SAAA,CACA,SAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,sCACE,eAAA,CACA,wBAAA,CACA,WAAA,CACA,mBAAA,CACA,aAAA,CACA,sBAAA,CACA,gBAAA,CACA,UAAA,CACA,aAAA,CACA,cAAA,CACA,uBAAA,CAGF,4CACE,sBAAA",sourcesContent:['@font-face {\r\n  font-family: \'Anton\';\r\n  src: url("../fonts/main-font.ttf");\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml, body {\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: rgb(15, 15, 15);\r\n}\r\n\r\nnav {\r\n  width: 100%;\r\n  height: 5vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  button {\r\n    background-color: rgb(31, 31, 31);\r\n    border: none;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    color: white;\r\n    border-radius: 1rem;\r\n    cursor: pointer;\r\n    transition: transform 0.5s ease;\r\n    margin: 0px 0.5rem;\r\n  }\r\n\r\n  button:hover {\r\n    filter: brightness(90%);\r\n  }\r\n\r\n  .fullscreen {\r\n    transform: rotate(90deg);\r\n  }\r\n}\r\n\r\narticle.main-container {\r\n  width: 100%;\r\n  height: 95vh;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  > div {\r\n    width: 80%;\r\n    height: 90%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    color: rgb(150, 150, 150);\r\n    font-family: "Anton";\r\n    font-weight: 100;\r\n    \r\n    > h1.watch {\r\n      font-size: 20rem;\r\n      display: flex;\r\n      justify-content: center;\r\n      transition: all 0.5s ease;\r\n    }\r\n\r\n    > h1.clock {\r\n      font-size: 21rem;\r\n      display: none;\r\n      justify-content: center;\r\n      transition: all 0.5s ease;\r\n    }\r\n\r\n    > div {\r\n      width: 20%;\r\n      height: 5%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      > button {\r\n        margin: 0px 1rem;\r\n        background-color: rgb(25, 25, 25);\r\n        border: none;\r\n        border-radius: 0.2rem;\r\n        color: rgb(150, 150, 150);\r\n        font-family:sans-serif;\r\n        font-weight: bold;\r\n        width: 5rem;\r\n        height: 2.5rem;\r\n        cursor: pointer;\r\n        transition: all 0.5s ease;\r\n      }\r\n\r\n      > button:hover {\r\n        filter: brightness(90%);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n'],sourceRoot:""}]);const d=l},736:(t,e,n)=>{var r=n(72),i=n.n(r),o=n(825),A=n.n(o),s=n(659),a=n.n(s),c=n(56),l=n.n(c),h=n(540),d=n.n(h),u=n(113),C=n.n(u),f=n(716),m={};m.styleTagTransform=C(),m.setAttributes=l(),m.insert=a().bind(null,"head"),m.domAPI=A(),m.insertStyleElement=d(),i()(f.A,m),f.A&&f.A.locals&&f.A.locals,n(628);const p=n.p+"525ac8cd912dfc9b6f1a.png";class g{constructor(){}getTime(t){setInterval((()=>{const e=this.updateTime();y.display(t,e)}),1e3)}updateTime(){const t=new Date;return{hours:t.getHours().toString().padStart(2,"0"),minutes:t.getMinutes().toString().padStart(2,"0"),seconds:t.getSeconds().toString().padStart(2,"0")}}}class y{static display(t,e){t.textContent=`${e.hours}:${e.minutes}:${e.seconds}`}}class b{constructor(){this.watch=document.querySelector(".watch"),this.resetButton=document.querySelector(".reset"),this.startButton=document.querySelector(".start"),this.startTime=0,this.elapsedTime=0,this.timerInterval=null}startWatch(){this.startTime=Date.now()-this.elapsedTime,this.timerInterval=setInterval((()=>this.updateWatch()),100),this.startButton.textContent="Stop",this.startButton.onclick=()=>this.stopWatch()}stopWatch(){clearInterval(this.timerInterval),this.elapsedTime=Date.now()-this.startTime,this.startButton.textContent="Start",this.startButton.onclick=()=>this.startWatch()}updateWatch(){this.elapsedTime=Date.now()-this.startTime,this.watch.textContent=w.timeToString(this.elapsedTime)}resetWatch(){clearInterval(this.timerInterval),this.elapsedTime=0,this.watch.textContent="00:00:00",this.startButton.textContent="Start",this.startButton.onclick=()=>this.startWatch()}}class v{constructor(){this.watchMethods=new b}addEventListeners(){const t=document.querySelector(".reset"),e=document.querySelector(".start");e.onclick=()=>this.watchMethods.startWatch(),t.onclick=()=>this.watchMethods.resetWatch(),document.addEventListener("keydown",(t=>{" "===t.key&&(t.preventDefault(),"Start"==e.textContent?this.watchMethods.startWatch():"Stop"==e.textContent&&this.watchMethods.stopWatch()),"Backspace"===t.key&&this.watchMethods.resetWatch()}))}}class w{constructor(){}static timeToString(t){let e=t/36e5,n=60*(e-Math.floor(e)),r=Math.floor(n),i=60*(n-r),o=Math.floor(i),A=100*(i-o),s=Math.floor(A);return`${r.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}:${s.toString().padStart(2,"0")}`}}!function(t){const e=document.createElement("link");e.rel="icon",e.href=t,e.type="image/x-icon",document.head.appendChild(e)}(p),function(){const t=document.querySelector("#fullscreen-button");t.addEventListener("click",(()=>{document.fullscreenElement?document.exitFullscreen():document.querySelector("body").requestFullscreen().catch((t=>{alert(`Error attempting to enable fullscreen mode: ${t.message} (${t.name})`)})),t.classList.toggle("fullscreen")}))}(),(new class{constructor(){this.stopwatchEvents=new v}initiateStopwatch(){this.stopwatchEvents.addEventListeners()}}).initiateStopwatch(),(new class{constructor(){this.fetchTime=new g}initializeClock(){const t=document.querySelector(".clock");this.fetchTime.getTime(t)}}).initializeClock();const B=document.querySelector(".switch");let S=!0;B.addEventListener("click",(()=>{!function(t){const e=Array.from(document.querySelectorAll(".watch, .watch-buttons")),n=document.querySelector(".clock");t?(function(t){t.forEach((t=>{t.style.display="none"}))}(e),n.style.display="flex"):t||(n.style.display="none",function(t){t.forEach((t=>{t.style.display="flex"}))}(e))}(S),S=!S}))},310:(t,e,n)=>{t.exports=n.p+"5a285b251f24df58b52c.ttf"}},n={};function r(t){var i=n[t];if(void 0!==i)return i.exports;var o=n[t]={id:t,exports:{}};return e[t](o,o.exports,r),o.exports}r.m=e,t=[],r.O=(e,n,i,o)=>{if(!n){var A=1/0;for(l=0;l<t.length;l++){for(var[n,i,o]=t[l],s=!0,a=0;a<n.length;a++)(!1&o||A>=o)&&Object.keys(r.O).every((t=>r.O[t](n[a])))?n.splice(a--,1):(s=!1,o<A&&(A=o));if(s){t.splice(l--,1);var c=i();void 0!==c&&(e=c)}}return e}o=o||0;for(var l=t.length;l>0&&t[l-1][2]>o;l--)t[l]=t[l-1];t[l]=[n,i,o]},r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;r.g.importScripts&&(t=r.g.location+"");var e=r.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var n=e.getElementsByTagName("script");if(n.length)for(var i=n.length-1;i>-1&&(!t||!/^http(s?):/.test(t));)t=n[i--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=t})(),(()=>{r.b=document.baseURI||self.location.href;var t={792:0};r.O.j=e=>0===t[e];var e=(e,n)=>{var i,o,[A,s,a]=n,c=0;if(A.some((e=>0!==t[e]))){for(i in s)r.o(s,i)&&(r.m[i]=s[i]);if(a)var l=a(r)}for(e&&e(n);c<A.length;c++)o=A[c],r.o(t,o)&&t[o]&&t[o][0](),t[o]=0;return r.O(l)},n=self.webpackChunktodo_list=self.webpackChunktodo_list||[];n.forEach(e.bind(null,0)),n.push=e.bind(null,n.push.bind(n))})(),r.nc=void 0;var i=r.O(void 0,[628],(()=>r(736)));i=r.O(i)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,