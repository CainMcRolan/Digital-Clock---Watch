(()=>{"use strict";var t,e={716:(t,e,r)=>{r.d(e,{A:()=>d});var n=r(354),A=r.n(n),o=r(314),i=r.n(o),s=r(417),a=r.n(s),c=new URL(r(310),r.b),l=i()(A()),h=a()(c);l.push([t.id,`@font-face{font-family:"Anton";src:url(${h})}*{margin:0;padding:0;box-sizing:border-box}html,body{width:100%;height:100vh;background-color:#0f0f0f}nav{width:100%;height:5vh;display:flex;justify-content:center;align-items:center}nav button{background-color:#1f1f1f;border:none;width:2rem;height:2rem;color:#fff;border-radius:1rem;cursor:pointer;transition:transform .5s ease}nav button:hover{filter:brightness(90%)}nav .fullscreen{transform:rotate(90deg)}article.main-container{width:100%;height:95vh;display:flex;justify-content:center}article.main-container>div{width:80%;height:90%;display:flex;justify-content:center;align-items:center;flex-direction:column;color:#969696;font-family:"Anton";font-weight:100}article.main-container>div>h1{font-size:20rem;display:flex;justify-content:center}article.main-container>div>div{width:20%;height:5%;display:flex;justify-content:center;align-items:center}article.main-container>div>div>button{margin:0px 1rem;background-color:#191919;border:none;border-radius:.2rem;color:#969696;font-family:sans-serif;font-weight:bold;width:5rem;height:2.5rem;cursor:pointer}article.main-container>div>div>button:hover{filter:brightness(90%)}`,"",{version:3,sources:["webpack://./src/assets/styles/style.scss"],names:[],mappings:"AAAA,WACE,mBAAA,CACA,2CAAA,CAIF,EACE,QAAA,CACA,SAAA,CACA,qBAAA,CAGF,UACE,UAAA,CACA,YAAA,CACA,wBAAA,CAGF,IACE,UAAA,CACA,UAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,WACE,wBAAA,CACA,WAAA,CACA,UAAA,CACA,WAAA,CACA,UAAA,CACA,kBAAA,CACA,cAAA,CACA,6BAAA,CAGF,iBACE,sBAAA,CAGF,gBACE,uBAAA,CAIJ,uBACE,UAAA,CACA,WAAA,CACA,YAAA,CACA,sBAAA,CAEA,2BACE,SAAA,CACA,UAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,qBAAA,CACA,aAAA,CACA,mBAAA,CACA,eAAA,CAEA,8BACE,eAAA,CACA,YAAA,CACA,sBAAA,CAGF,+BACE,SAAA,CACA,SAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,sCACE,eAAA,CACA,wBAAA,CACA,WAAA,CACA,mBAAA,CACA,aAAA,CACA,sBAAA,CACA,gBAAA,CACA,UAAA,CACA,aAAA,CACA,cAAA,CAGF,4CACE,sBAAA",sourcesContent:['@font-face {\r\n  font-family: \'Anton\';\r\n  src: url("../fonts/main-font.ttf");\r\n}\r\n\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml, body {\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: rgb(15, 15, 15);\r\n}\r\n\r\nnav {\r\n  width: 100%;\r\n  height: 5vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  button {\r\n    background-color: rgb(31, 31, 31);\r\n    border: none;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    color: white;\r\n    border-radius: 1rem;\r\n    cursor: pointer;\r\n    transition: transform 0.5s ease;\r\n  }\r\n\r\n  button:hover {\r\n    filter: brightness(90%);\r\n  }\r\n\r\n  .fullscreen {\r\n    transform: rotate(90deg);\r\n  }\r\n}\r\n\r\narticle.main-container {\r\n  width: 100%;\r\n  height: 95vh;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  > div {\r\n    width: 80%;\r\n    height: 90%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    color: rgb(150, 150, 150);\r\n    font-family: "Anton";\r\n    font-weight: 100;\r\n    \r\n    > h1 {\r\n      font-size: 20rem;\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n\r\n    > div {\r\n      width: 20%;\r\n      height: 5%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      > button {\r\n        margin: 0px 1rem;\r\n        background-color: rgb(25, 25, 25);\r\n        border: none;\r\n        border-radius: 0.2rem;\r\n        color: rgb(150, 150, 150);\r\n        font-family:sans-serif;\r\n        font-weight: bold;\r\n        width: 5rem;\r\n        height: 2.5rem;\r\n        cursor: pointer;\r\n      }\r\n\r\n      > button:hover {\r\n        filter: brightness(90%);\r\n      }\r\n    }\r\n  }\r\n}'],sourceRoot:""}]);const d=l},973:(t,e,r)=>{var n=r(72),A=r.n(n),o=r(825),i=r.n(o),s=r(659),a=r.n(s),c=r(56),l=r.n(c),h=r(540),d=r.n(h),C=r(113),u=r.n(C),f=r(716),m={};m.styleTagTransform=u(),m.setAttributes=l(),m.insert=a().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=d(),A()(f.A,m),f.A&&f.A.locals&&f.A.locals,r(628);const p=r.p+"525ac8cd912dfc9b6f1a.png";class g{constructor(){this.watch=document.querySelector(".watch"),this.resetButton=document.querySelector(".reset"),this.startButton=document.querySelector(".start"),this.startTime=0,this.elapsedTime=0,this.timerInterval=null}startWatch(){this.startTime=Date.now()-this.elapsedTime,this.timerInterval=setInterval((()=>this.updateWatch()),100),this.startButton.textContent="Stop",this.startButton.onclick=()=>this.stopWatch()}stopWatch(){clearInterval(this.timerInterval),this.elapsedTime=Date.now()-this.startTime,this.startButton.textContent="Start",this.startButton.onclick=()=>this.startWatch()}updateWatch(){this.elapsedTime=Date.now()-this.startTime,this.watch.textContent=v.timeToString(this.elapsedTime)}resetWatch(){clearInterval(this.timerInterval),this.elapsedTime=0,this.watch.textContent="00:00:00",this.startButton.textContent="Start",this.startButton.onclick=()=>this.startWatch()}}class b{constructor(){this.watchMethods=new g}addEventListeners(){const t=document.querySelector(".reset"),e=document.querySelector(".start");e.onclick=()=>this.watchMethods.startWatch(),t.onclick=()=>this.watchMethods.resetWatch(),document.addEventListener("keydown",(t=>{" "===t.key&&(t.preventDefault(),"Start"==e.textContent?this.watchMethods.startWatch():"Stop"==e.textContent&&this.watchMethods.stopWatch()),"Backspace"===t.key&&this.watchMethods.resetWatch()}))}}class v{constructor(){}static timeToString(t){let e=t/36e5,r=60*(e-Math.floor(e)),n=Math.floor(r),A=60*(r-n),o=Math.floor(A),i=100*(A-o),s=Math.floor(i);return`${n.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}:${s.toString().padStart(2,"0")}`}}!function(t){const e=document.createElement("link");e.rel="icon",e.href=t,e.type="image/x-icon",document.head.appendChild(e)}(p),function(){const t=document.querySelector("#fullscreen-button");t.addEventListener("click",(()=>{document.fullscreenElement?document.exitFullscreen():document.querySelector("body").requestFullscreen().catch((t=>{alert(`Error attempting to enable fullscreen mode: ${t.message} (${t.name})`)})),t.classList.toggle("fullscreen")}))}(),(new class{constructor(){this.stopwatchEvents=new b}initiateStopwatch(){this.stopwatchEvents.addEventListeners()}}).initiateStopwatch()},310:(t,e,r)=>{t.exports=r.p+"5a285b251f24df58b52c.ttf"}},r={};function n(t){var A=r[t];if(void 0!==A)return A.exports;var o=r[t]={id:t,exports:{}};return e[t](o,o.exports,n),o.exports}n.m=e,t=[],n.O=(e,r,A,o)=>{if(!r){var i=1/0;for(l=0;l<t.length;l++){for(var[r,A,o]=t[l],s=!0,a=0;a<r.length;a++)(!1&o||i>=o)&&Object.keys(n.O).every((t=>n.O[t](r[a])))?r.splice(a--,1):(s=!1,o<i&&(i=o));if(s){t.splice(l--,1);var c=A();void 0!==c&&(e=c)}}return e}o=o||0;for(var l=t.length;l>0&&t[l-1][2]>o;l--)t[l]=t[l-1];t[l]=[r,A,o]},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");if(r.length)for(var A=r.length-1;A>-1&&(!t||!/^http(s?):/.test(t));)t=r[A--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),(()=>{n.b=document.baseURI||self.location.href;var t={792:0};n.O.j=e=>0===t[e];var e=(e,r)=>{var A,o,[i,s,a]=r,c=0;if(i.some((e=>0!==t[e]))){for(A in s)n.o(s,A)&&(n.m[A]=s[A]);if(a)var l=a(n)}for(e&&e(r);c<i.length;c++)o=i[c],n.o(t,o)&&t[o]&&t[o][0](),t[o]=0;return n.O(l)},r=self.webpackChunktodo_list=self.webpackChunktodo_list||[];r.forEach(e.bind(null,0)),r.push=e.bind(null,r.push.bind(r))})(),n.nc=void 0;var A=n.O(void 0,[628],(()=>n(973)));A=n.O(A)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,